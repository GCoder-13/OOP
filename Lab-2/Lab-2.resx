<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>